{"version":3,"sources":["features/bandit/banditSlice.js","features/bandit/Indicator.jsx","features/bandit/SparklineBar.jsx","features/bandit/Histogram.jsx","useInterval.js","Button.jsx","features/bandit/OneBandit.jsx","features/bandit/EpsilonGreedyAlgo.jsx","util.js","Slider.jsx","features/bandit/EpsilonSelector.jsx","H1.jsx","features/bandit/Bandits.jsx","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["createNewBandit","settings","id","mu","Math","round","random","hidden","number","numbers","playing","average","standardNormalDraw","randomNormal","playBandit","bandit","N","length","resetBandit","newBandit","banditSlice","createSlice","name","initialState","nBandits","out","bandits","Array","map","_","activeAlgorithm","epsilon","lastPlayed","undefined","algorithmStepping","i","reducers","changeN","state","action","payload","setOneMu","pullOne","ix","pullAll","resetOne","resetAll","forEach","d","setOnePlaying","console","log","setAllPlaying","setStepping","setEpsilon","actions","selectBandits","filter","x","selectStepping","selectEpsilon","selectNBandits","Indicator","props","color","className","SparklineBar","data","width","height","bar_width","xScale","scaleLinear","domain","range","yScale","y","fill","Histogram","axisContainer","useRef","bins","bin","thresholds","x0","x1","max","nice","current","select","attr","call","axisBottom","ticks","ref","useInterval","callback","delay","savedCallback","useEffect","setInterval","clearInterval","Button","onClick","children","Bandit","onReset","onPlay","onPull","onSetMu","style","type","defaultValue","step","min","onChange","e","target","value","slice","EpsilonGreedyAlgo","values","onAct","stepping","onSetStepping","act","floor","arr","val","element","argMax","Slider","htmlFor","EpsilonSelector","onSetEpsilon","H1","classes","Bandits","banditData","useSelector","dispatch","useDispatch","choice","App","NBandits","newN","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","banditReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5da032b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { randomNormal } from \"d3\";\n\n/**\n * @typedef BanditData\n * @prop {number} id\n * @prop {number} mu\n * @prop {boolean} hidden\n * @prop {number|null} number\n * @prop {number[]} numbers\n * @prop {boolean} playing\n * @prop {number} average\n */\n\n/**\n * @typedef NewBanditSettings\n * @prop {number} id\n * @prop {number} [mu]\n * @prop {boolean} hidden\n */\n\nconst randomMu = () => Math.round(10 * (5 * (Math.random() - 0.5))) / 10;\n\n/**\n *\n * @param {NewBanditSettings} settings\n * @returns {BanditData}\n */\nconst createNewBandit = (settings) => {\n  const { id, mu = randomMu(), hidden = true } = settings;\n  return {\n    id,\n    mu,\n    hidden,\n    number: null,\n    numbers: [],\n    playing: false,\n    average: 0,\n  };\n};\n\nconst standardNormalDraw = randomNormal(0, 1);\n\n/**\n * @typedef BanditState\n * @prop {number} N\n * @prop {BanditData[]} bandits\n * @prop {number} lastPlayed\n * @prop {number} epsilon\n * @prop {boolean} algorithmStepping\n */\n\n/**\n *\n * @param {number} nBandits\n * @returns {BanditState}\n */\nconst initialState = (nBandits) => {\n  const out = {\n    N: nBandits,\n    bandits: [...Array(10)].map((_, id) => createNewBandit({ id })),\n    activeAlgorithm: 0,\n    epsilon: 0.98,\n    lastPlayed: undefined,\n    algorithmStepping: false,\n  };\n  for (let i = 0; i < nBandits; i++) {\n    out.bandits[i].hidden = false;\n    out.bandits[i].numbers = [];\n  }\n  return out;\n};\n\nconst playBandit = (bandit) => {\n  const number = standardNormalDraw() + bandit.mu;\n  const N = bandit.numbers.length + 1;\n  return {\n    ...bandit,\n    number,\n    numbers: [...bandit.numbers, number],\n    average: bandit.average + (number - bandit.average) / N,\n  };\n};\n\n/**\n *\n * @param {BanditData} bandit\n * @param {number} id\n * @returns {BanditData}\n */\nconst resetBandit = (bandit, id) => {\n  const newBandit = createNewBandit({ id });\n  newBandit.hidden = bandit.hidden;\n  newBandit.mu = bandit.mu;\n  return newBandit;\n};\n\nexport const banditSlice = createSlice({\n  name: \"bandit\",\n  initialState: initialState(5),\n  reducers: {\n    changeN: (state, action) => {\n      const N = +action.payload;\n      for (let id = 0; id < 10; id++) {\n        state.bandits[id].hidden = id >= N;\n      }\n      state.N = N;\n    },\n    setOneMu: (state, action) => {\n      const { id, mu } = action.payload;\n      state.bandits[id].mu = +mu;\n    },\n    pullOne: (state, action) => {\n      const ix = action.payload;\n      state.bandits[ix] = playBandit(state.bandits[ix]);\n    },\n    pullAll: (state) => {\n      // TODO: make async\n      state.bandits = state.bandits.map(playBandit);\n    },\n    resetOne: (state, action) => {\n      const id = action.payload;\n      state.bandits[id] = resetBandit(state.bandits[id], id);\n    },\n    resetAll: (state) => {\n      state.bandits.forEach((d, id) => {\n        state.bandits[id] = resetBandit(d, id);\n      });\n    },\n    setOnePlaying: (state, action) => {\n      console.log(\"Here!\");\n      const id = action.payload;\n      state.bandits[id].playing = !state.bandits[id].playing;\n    },\n    setAllPlaying: (state) => {\n      for (let id = 0; id < state.N; id++) {\n        state.bandits[id].playing = !state.bandits[id].playing;\n      }\n    },\n    setStepping: (state) => {\n      state.algorithmStepping = !state.algorithmStepping;\n    },\n    setEpsilon: (state, action) => {\n      state.epsilon = action.payload;\n    },\n  },\n});\n\nexport const {\n  changeN,\n  setOneMu,\n  pullOne,\n  pullAll,\n  resetOne,\n  resetAll,\n  setOnePlaying,\n  setAllPlaying,\n  setStepping,\n  setEpsilon,\n} = banditSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\n/**\n *\n * @param {BanditState} state\n * @returns {BanditData[]}\n */\nexport const selectBandits = (state) =>\n  state.bandit.bandits.filter((x) => !x.hidden);\n\n/**\n * Selects from store whether the algorithm is currently stepping or not\n *\n * @param {BanditState} state\n * @returns {boolean}\n */\nexport const selectStepping = (state) => state.bandit.algorithmStepping;\n\n/**\n * Selects epsilon for epsilon greedy algorithm\n *\n * @param {BanditState} state\n * @returns {number}\n */\nexport const selectEpsilon = (state) => state.bandit.epsilon;\n\n/**\n * Selects number of active Bandits\n *\n * @param {BanditState} state\n * @returns {number}\n */\nexport const selectNBandits = (state) => state.bandit.N;\n\nexport default banditSlice.reducer;\n","import React from \"react\";\n\nfunction Indicator(props) {\n  const { number } = props;\n  const color = +number > 0 ? \"green\" : \"red\";\n  return (\n    <div className={`mb-3 text-${color}-700 text-lg`}>\n      {Math.round(number * 1000) / 1000}\n    </div>\n  );\n}\n\nexport default Indicator;\n","import React from \"react\";\nimport { scaleLinear } from \"d3\";\n\nfunction SparklineBar(props) {\n  const { data, width = 160, height = 30 } = props;\n  const N = data.length;\n  const bar_width = N === 0 ? 0 : (width - N) / N;\n  const xScale = scaleLinear().domain([0, N]).range([0, width]);\n  const yScale = scaleLinear().domain([-5, 5]).range([height, 0]);\n\n  return (\n    <div className=\"sparkline\">\n      <svg width={width} height={height}>\n        <g>\n          {data.map((d, i) => {\n            return (\n              <rect\n                key={i}\n                className=\"bar\"\n                x={xScale(i)}\n                height={yScale(d)}\n                y={height - yScale(d)}\n                width={bar_width}\n                fill={d > 0 ? \"green\" : \"red\"}\n              />\n            );\n          })}\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default SparklineBar;\n","import React, { useEffect, useRef } from \"react\";\nimport { bin, scaleLinear, max, axisBottom, select } from \"d3\";\n\nfunction Histogram(props) {\n  const { data, width, height } = props;\n  const axisContainer = useRef(null);\n\n  // d3 computations\n  const bins = bin().thresholds(30)(data);\n  const x = scaleLinear()\n    .domain([bins[0].x0, bins[bins.length - 1].x1])\n    .range([0, width]);\n\n  const y = scaleLinear()\n    .domain([0, max(bins, (d) => d.length)])\n    .nice()\n    .range([height, 0]);\n\n  const color = \"#374151\";\n\n  if (axisContainer.current && data.length > 0) {\n    select(axisContainer.current)\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(axisBottom(x).ticks(6));\n  }\n\n  if (data.length === 0) {\n    return <svg width={width} height={height + 20}></svg>;\n  }\n\n  return (\n    <div>\n      <svg width={width} height={height + 20}>\n        <g>\n          {bins.map((d, i) => {\n            return (\n              <rect\n                key={i}\n                className=\"bar\"\n                x={x(d.x0) + 1}\n                width={Math.max(0, x(d.x1) - x(d.x0) - 1)}\n                y={y(d.length)}\n                height={y(0) - y(d.length)}\n                fill={color}\n              />\n            );\n          })}\n        </g>\n        <g ref={axisContainer} />\n      </svg>\n    </div>\n  );\n}\n\nexport default Histogram;\n","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React from \"react\";\n\nfunction Button(props) {\n  const { onClick, children, color = \"blue\" } = props;\n\n  let className =\n    \"bg-transparent font-semibold hover:text-white py-2 px-4 border  hover:border-transparent rounded w-2/5 m-1 max-w-xs\";\n\n  switch (color) {\n    case \"blue\":\n      className += \" border-blue-500 hover:bg-blue-500 text-blue-700\";\n      break;\n    case \"red\":\n      className += \" border-red-500 hover:bg-red-500 text-red-700\";\n      break;\n    case \"green\":\n      className += \" border-green-500 hover:bg-green-500 text-green-700\";\n      break;\n    case \"yellow\":\n      className += \" border-yellow-500 hover:bg-yellow-500 text-yellow-700\";\n      break;\n    case \"pink\":\n      className += \" border-pink-500 hover:bg-pink-500 text-pink-700\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <button className={className} onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport Indicator from \"./Indicator\";\nimport SparklineBar from \"./SparklineBar\";\nimport Histogram from \"./Histogram\";\nimport useInterval from \"../../useInterval\";\nimport Button from \"../../Button\";\n\n/**\n * @typedef BanditProps\n * @prop {number} width\n * @prop {number} number\n * @prop {number} mu\n * @prop {number[]} numbers\n * @prop {boolean} playing\n * @prop {number} average\n * @prop {()=>void} onPlay\n * @prop {()=>void} onReset\n * @prop {()=>void} onPull\n * @prop {(number)=>void} onSetMu\n */\n\n/**\n * @param {BanditProps} props\n */\nfunction Bandit(props) {\n  const {\n    width,\n    number,\n    mu,\n    numbers,\n    playing,\n    average,\n    onReset,\n    onPlay,\n    onPull,\n    onSetMu,\n  } = props;\n  const N = numbers.length;\n  useInterval(onPull, playing ? 0.1 : null);\n  return (\n    <div\n      className=\"flex flex-col items-center border-2 border-dashed border-red-200 m-1\"\n      style={{ width: 200 }}\n    >\n      <div className=\"flex items-center justify-around\">\n        <div className=\"flex w-1/2 justify-around\">\n          <span className=\"w-1/3 text-purple-700 font-medium\">mu</span>\n          <input\n            type=\"number\"\n            className=\"w-2/3 border border-purple-500 p-0.5\"\n            name=\"mu\"\n            id=\"mu\"\n            defaultValue={mu}\n            step={0.1}\n            min={-4}\n            max={4}\n            onChange={(e) => onSetMu(e.target.value)}\n          />\n        </div>\n        <Indicator number={number} />\n      </div>\n      <Button onClick={onPull}>Pull</Button>\n      <Button onClick={onPlay} color=\"green\">\n        {playing ? \"Pause\" : \"Play\"}\n      </Button>\n      <Button onClick={onReset} color=\"red\">\n        Reset\n      </Button>\n      <SparklineBar width={width} data={numbers.slice(-10)} />\n      <Histogram data={numbers} width={width} height={150} />\n      <p>{N} Draws</p>\n      <p>Average of {Math.round(average * 1000) / 1000} </p>\n    </div>\n  );\n}\n\nexport default Bandit;\n","import React from \"react\";\nimport Button from \"../../Button\";\nimport { argMax } from \"../../util\";\nimport useInterval from \"../../useInterval\";\n\n/**\n * @typedef EpsilonGreedyProps\n * @prop {number[]} values\n * @prop {(ix: number)=>void} onAct\n * @prop {boolean} stepping\n * @prop {()=>void} onSetStepping\n */\n\n/**\n * @param {EpsilonGreedyProps} props\n */\nfunction EpsilonGreedyAlgo(props) {\n  const { epsilon, values, onAct, stepping, onSetStepping } = props;\n\n  const choose = () => {\n    if (Math.random() > epsilon) {\n      // random choice\n      return Math.floor(Math.random() * (values.length + 1));\n    }\n    return argMax(values);\n  };\n\n  const act = () => {\n    onAct(choose());\n  };\n\n  useInterval(act, stepping ? 0.1 : null);\n\n  return (\n    <div>\n      <Button onClick={onSetStepping} color=\"green\">\n        {stepping ? \"Pause\" : \"Run\"}\n      </Button>\n      <Button onClick={act} color=\"blue\">\n        Step\n      </Button>\n    </div>\n  );\n}\n\nexport default EpsilonGreedyAlgo;\n","/**\n * Compute the index of the maximium value in an array of numbers\n *\n * @param  {number[]} arr\n * @returns {number}\n */\nconst argMax = (arr) => {\n  let ix = -1;\n  let val = -Infinity;\n\n  for (let i = 0; i < arr.length; i++) {\n    const element = arr[i];\n    if (element > val) {\n      ix = i;\n      val = element;\n    }\n  }\n  return ix;\n};\n\nexport { argMax };\n","import React from \"react\";\n\n/**\n * @typedef SliderProps\n * @prop {number} value\n * @prop {String} name\n * @prop {(val: number)=>void} onChange\n * @prop {number} min\n * @prop {number} max\n * @prop {number} step\n * @prop {number} defaultValue\n */\n\n/**\n * @param {SliderProps} props\n */\nfunction Slider(props) {\n  const { value, name, onChange, min, max, step, defaultValue } = props;\n\n  return (\n    <div>\n      <span className=\"pr-4\">\n        {name} = {value}\n      </span>\n      <label htmlFor=\"value\">\n        <input\n          type=\"range\"\n          name=\"value\"\n          id=\"value\"\n          min={min}\n          max={max}\n          step={step}\n          defaultValue={defaultValue}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Slider;\n","import React from \"react\";\nimport Slider from \"../../Slider\";\n\n/**\n * @typedef EpsilonSelectorProps\n * @prop {number} epsilon\n * @prop {(val: number)=>void} onSetEpsilon\n */\n\n/**\n * @param {EpsilonSelectorProps} props\n */\nfunction EpsilonSelector(props) {\n  const { epsilon, onSetEpsilon } = props;\n\n  return (\n    <Slider\n      value={epsilon}\n      name={\"epsilon\"}\n      onChange={onSetEpsilon}\n      min={0}\n      max={1}\n      step={0.01}\n      defaultValue={0.9}\n    />\n  );\n}\n\nexport default EpsilonSelector;\n","import React from \"react\";\n\nfunction H1(props) {\n  const { classes = \"\", children } = props;\n  const className = `text-xl font-semibold ${classes} mt-8 mb-8`;\n  return <h1 className={className}>{children}</h1>;\n}\n\nexport default H1;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  pullOne,\n  resetOne,\n  selectBandits,\n  setOneMu,\n  setOnePlaying,\n  selectStepping,\n  setStepping,\n  selectEpsilon,\n  setEpsilon,\n} from \"./banditSlice\";\nimport Bandit from \"./OneBandit\";\nimport EpsilonGreedyAlgo from \"./EpsilonGreedyAlgo\";\nimport EpsilonSelector from \"./EpsilonSelector\";\nimport H1 from \"../../H1\";\n\nfunction Bandits() {\n  const banditData = useSelector(selectBandits);\n\n  // prep for epsilon greedy\n  const values = banditData.map((x) => x.average);\n  const onAct = (choice) => {\n    dispatch(pullOne(choice));\n  };\n  const stepping = useSelector(selectStepping);\n  const epsilon = useSelector(selectEpsilon);\n  const onSetEpsilon = (val) => dispatch(setEpsilon(val));\n\n  // prep for bandit display\n  const dispatch = useDispatch();\n  const bandits = banditData.map((data, id) => {\n    return (\n      <Bandit\n        key={id}\n        width={160}\n        mu={data.mu}\n        number={data.number}\n        numbers={data.numbers}\n        playing={data.playing}\n        average={data.average}\n        onReset={() => dispatch(resetOne(id))}\n        onPlay={() => dispatch(setOnePlaying(id))}\n        onPull={() => dispatch(pullOne(id))}\n        onSetMu={(mu) => dispatch(setOneMu({ id, mu }))}\n      />\n    );\n  });\n  return (\n    <div>\n      <div className=\"flex flex-wrap\">{bandits}</div>\n      <H1>Epsilon Greedy Algorithm</H1>\n      <EpsilonSelector epsilon={epsilon} onSetEpsilon={onSetEpsilon} />\n      <EpsilonGreedyAlgo\n        values={values}\n        onAct={onAct}\n        stepping={stepping}\n        epsilon={epsilon}\n        onSetStepping={() => dispatch(setStepping())}\n      />\n    </div>\n  );\n}\n\nexport default Bandits;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Bandits from \"./features/bandit/Bandits\";\nimport {\n  changeN,\n  resetAll,\n  setAllPlaying,\n  selectNBandits,\n} from \"./features/bandit/banditSlice\";\nimport Button from \"./Button\";\nimport H1 from \"./H1\";\nimport Slider from \"./Slider\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const NBandits = useSelector(selectNBandits);\n  return (\n    <div className=\"container mx-auto px-8\">\n      <H1>Learning with Bandits!</H1>\n      <Slider\n        value={NBandits}\n        name={\"Number of Bandits\"}\n        onChange={(newN) => dispatch(changeN(newN))}\n        min={2}\n        max={10}\n        step={1}\n        defaultValue={5}\n      />\n\n      <Button onClick={() => dispatch(setAllPlaying())} color=\"yellow\">\n        Play/Pause all\n      </Button>\n      <Button onClick={() => dispatch(resetAll())} color=\"pink\">\n        Reset all\n      </Button>\n      <Bandits />\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount) => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport banditReducer from \"../features/bandit/banditSlice\";\nimport counterReducer from \"../features/counter/counterSlice\";\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n    bandit: banditReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}